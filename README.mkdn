# NAME

Return::Object - on-the-fly generation of results objects

# VERSION

version 0.01

# SYNOPSIS

    use Return::Object;

    sub foo {
      return_object { a => 1 };
    }

    $result = foo();
    print $result->a;  # prints
    print $result->b;  # throws

# DESCRIPTION

This module provides routines which encapsulate a hash as an object.
The object provides methods for keys in the hash; attempting to access
a non-existent key via a method will cause an exception.

The impetus for this was to encapsulate data returned from a
subroutine or method (hence the name).  Returning a bare hash can lead
to bugs if there are typos in hash key names when accessing the hash.

It is not necessary for the hash to be fully populated when the object
is created.  The underlying hash may be manipulated directly, and
changes will be reflected in the object's methods.  To prevent this,
consider using the lock routines in [Hash::Util](https://metacpan.org/pod/Hash::Util) on the object after
creation.

Only hash keys which are legal method names will be accessible via
object methods.

## Object construction and constructor customization

By default `Object::Return` exports a `return_object` constructor
which, given a hashref, blesses it directly into the
**Return::Object::Class** class.

The constructor may be customized to change which class the object is
instantiated from, and how it is constructed from the data.
`Return::Object` uses [Exporter::Tiny](https://metacpan.org/pod/Exporter::Tiny) to perform the customization.
For example,

    use Return::Object
      return_object => { -as => 'return_cloned_object',
                         -clone => 1 };

will create a version of `return_object` which clones the passed hash
and is imported as `return_cloned_object`.  To import it under
the original name, `return_object`, leave out the `-as` option.

The following options are available to customize the constructor.

- `-as` => _subroutine name_

    This is optional, and imports the customized version of
    `return_object` with the given name.

- `-class` => _class name_

    The object will be blessed into the specified class.  If the class
    should be created on the fly, specify the `-create` option.
    See ["Object Classes"](#object-classes) for what is expected of the object classes.
    This defaults to `Object::Return::Class`.

- `-create` => _boolean_

    If true, and `-class` is specified, a class with the given name
    will be created.

- `-copy` => _boolean_

    If true, the object will store the data in a _shallow_ copy of the
    hash. By default, the object uses the hash directly.

- `-clone` => _boolean_

    If true, the object will store the data in a deep copy of the hash,
    made with ["dclone" in Storeable](https://metacpan.org/pod/Storeable#dclone). By default, the object uses the hash
    directly.

## Object Classes

An object class has the following properties:

- The class must be a subclass of `Return::Object::Base`.
- The class typically does not provide any methods, as they would mask
a hash key of the same name.
- The class need not have a constructor.  If it does, it is passed a
hashref which it should bless as the actual object.  For example:

        package My::Result;
        use parent 'Return::Object::Base';

        sub new {
          my  ( $class, $hash ) = @_;
          return bless $hash, $class;
        }

    This excludes having a hash key named `new`.

`Return::Object::Base` provides an empty `DESTROY` method, a
`can` method, and an `AUTOLOAD` method.  They will mask hash
keys with the same names.

# BUGS AND LIMITATIONS

You can make new bug reports, and view existing ones, through the
web interface at [https://rt.cpan.org/Public/Dist/Display.html?Name=Return-Object](https://rt.cpan.org/Public/Dist/Display.html?Name=Return-Object).

# SEE ALSO

Please see those modules/websites for more information related to this module.

- [Object::Result](https://metacpan.org/pod/Object::Result)
- [Hash::AsObject](https://metacpan.org/pod/Hash::AsObject)
- [Data::AsObject](https://metacpan.org/pod/Data::AsObject)

# AUTHOR

Diab Jerius <djerius@cpan.org>

# COPYRIGHT AND LICENSE

This software is Copyright (c) 2017 by Smithsonian Astrophysical Observatory.

This is free software, licensed under:

    The GNU General Public License, Version 3, June 2007
